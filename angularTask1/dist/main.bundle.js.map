{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/http.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n  <button (click)=\\\"button1Clicked()\\\">Click to get all tasks</button>\\n  <h3>tasks are:  </h3>\\n\\n\\n  Enter task ID here: <input #id type=\\\"text\\\" name=\\\"id\\\">\\n  <button (click)=\\\"button2Clicked(id.value)\\\" >Click to get one task</button>\\n\\n  <h2> New Task </h2>\\n  <form (submit)=\\\"submitNewTask()\\\">\\n    <p>{{ newTask | json }}</p>\\n    title: <input type=\\\"text\\\" name=\\\"title\\\" [(ngModel)] = \\\"newTask.title\\\" >\\n    description: <input type=\\\"text\\\" name=\\\"description\\\" [(ngModel)] = \\\"newTask.description\\\" >\\n    <input type=\\\"submit\\\" value=\\\"Create\\\">\\n  </form>\\n\\n  <h3>Tasks List </h3>\\n  <div *ngFor=\\\"let task of tasks\\\">\\n    <p> {{ task.description }} - {{ task.title }} </p>\\n    <button (click)=\\\"editClicked(task)\\\" >Edit</button>\\n    <button (click)=\\\"deleteClicked(task)\\\" >Delete</button>\\n  </div>\\n\\n  <div *ngIf=\\\"show\\\">\\n    <h3>Edit Task</h3>\\n\\n    <form (submit)=\\\"submitEditTask()\\\">\\n      <p>{{ editTask | json }}</p>\\n      title: <input type=\\\"text\\\" name=\\\"title\\\" value=\\\"editTask\\\" [(ngModel)] = \\\"editTask.title\\\" >\\n      description: <input type=\\\"text\\\" name=\\\"description\\\" value=\\\"editTask\\\" [(ngModel)] = \\\"editTask.description\\\" >\\n      <input type=\\\"submit\\\" value=\\\"Edit\\\">\\n    </form>\\n  </div>\\n\\n\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Restful Tasks CRUD';\n  tasks = [];\n  newTask: any;\n  show: boolean;\n  editTask: any;\n\n  constructor(private _httpService: HttpService) {\n  }\n\n  ngOnInit() {\n    this.getTasksFromService()\n    this.show = false\n    this.newTask = {\n      title: \"\",\n      description: \"\"\n    }\n    this.editTask = {\n      _id: \"\",\n      title: \"\",\n      description: \"\"\n    }\n  }\n\n  getTasksFromService() {\n    let observable = this._httpService.getTasks()\n    observable.subscribe(data => {\n      console.log(\"Got our data!\", data)\n      this.tasks = data['tasks'];\n    })\n  }\n\n  button1Clicked(){\n    let observable = this._httpService.getTasks()\n    observable.subscribe(data => {\n      console.log(\"Got our data!\", data)\n      this.tasks = data['tasks'];\n    })\n  }\n\n  button2Clicked(id){\n    console.log(\"input is: \", id)\n\n    let observable = this._httpService.getTaskByID(id)\n    observable.subscribe(data => {\n      console.log(\"This is data: \", data)\n      this.tasks = data['task'][0].description;\n    })\n  }\n\n  submitNewTask(){\n    let observable = this._httpService.createTask(this.newTask)\n    observable.subscribe(data => {\n      console.log(\"recieved data: \", data)\n      this.newTask = {title: \"\", description: \"\"}\n      this.getTasksFromService()\n    })\n  }\n  \n  deleteClicked(task){\n    console.log(this.editTask._id)\n    let observable = this._httpService.deleteTask(task._id)\n    observable.subscribe(data => {\n      console.log(\"Got our data!\", data)\n      this.getTasksFromService()\n    })\n  }\n\n  // updateClicked(task){\n  //   let observable = this._httpService.updateTask(task._id)\n  //   observable.subscribe(data => {\n  //     console.log(\"got data: \", data)\n  //     this.getTasksFromService()\n  //   })\n  // }\n\n  editClicked(task){\n    this.show = true \n    console.log('task.title is: ', task.title)\n    this.editTask = task\n    // this.editTask.title = task.title\n    // this.editTask.description = task.description\n    console.log('this.editTask is: ', this.editTask)\n    console.log(\"this.editTask._id is: \", this.editTask._id)\n    // this.editTask['editTitle'] = task.title\n    // this.editTask['editDescription'] = task.description\n    // let observable = this._httpService.updateTask(task._id)\n    // observable.subscribe(data => {\n    //   console.log(\"got data: \", data)\n    //   this.getTasksFromService()\n  }\n\n  submitEditTask(){\n    console.log(\"this.editTask is: \", this.editTask)\n    let observable = this._httpService.updateTask(this.editTask)\n    observable.subscribe(data => {\n      console.log(\"got data: \", data)\n      this.show = false\n      this.getTasksFromService()\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms'\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class HttpService {\n\n  constructor(private _http: HttpClient) {\n      // this.getPokemon();\n  }\n\n  getTasks(){\n    console.log(\"in here\")\n    // our http response is an observable, store it in the variable tempObservable\n    // let tempObservable = this._http.get('/tasks');\n\n    // subscribe to our observable and provide the code we would like to do with our data from the response\n    // tempObservable.subscribe(data => console.log(\"Got our tasks!\", data));\n    return this._http.get('/tasks')\n  }\n\n  getTaskByID(id){\n    return this._http.get('/tasks/' + id)\n  }\n\n  createTask(newTask){\n    return this._http.post('/tasks', newTask)\n  }\n\n  deleteTask(id){\n    return this._http.delete('/tasks/' + id)\n  }\n\n  updateTask(editTask){\n    console.log(\"editTask is: \", editTask)\n    console.log(\"editTask.title is: \", editTask.title)\n    return this._http.put('/tasks/' + editTask._id, editTask)\n  }\n  \n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/http.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}